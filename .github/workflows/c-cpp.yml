# This starter workflow is for a CMake project running on a single platform. There is a different starter workflow if you need cross-platform coverage.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml
name: Build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build_devcontainer:
    runs-on: ubuntu-latest

    steps:
    - name: Build devcontainer
      uses: devcontainers/ci@v0.2
      cacheFrom: ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:latest
      with:
        push: true
        imageName: ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:latest

  build_cpp20:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:latest
      options: --user root

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Build
      uses: ${{ github.repository_owner }}/${{ github.event.repository.name }}:latest
      with:
        runCmd: |
          cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_CXX_STANDARD=20
          cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
          ctest -C ${{env.BUILD_TYPE}}
