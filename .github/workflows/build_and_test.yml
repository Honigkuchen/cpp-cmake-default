# This starter workflow is for a CMake project running on a single platform. There is a different starter workflow if you need cross-platform coverage.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml
name: Build C++

on:
  push:
    branches:
      - main
    paths:
      - "CMakeLists.txt"
      - "**/*.cpp"
      - "**/*.h"
      - "**/*.hpp"
      - "**/*.cxx"
      - "**/*.c"
      - ".github/workflows/build_and_test.yml"
  pull_request:
    branches:
      - main

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  # BUILD_DIR: ${{github.workspace}}/build
  BUILD_DIR: ~/build
  CPP_STANDARD: 20
  
jobs:
  build_cpp20:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/honigkuchen/${{ github.event.repository.name }}
      options: --user root

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build
        run: |
          cmake --preset MakefileConfigurationPreset
          cmake --build --preset MakefileBuildPreset

      - name: Test
        run: |
          ls -alsh ${{env.BUILD_DIR}}
          ls -alsh ${{env.BUILD_DIR}}/test
          ctest \
            -C ${{env.BUILD_TYPE}} \
            --test-dir ${{env.BUILD_DIR}}/test \
            --output-junit junit_result.xml \
            --output-on-failure

      - name: Benchmark
        run: |
          ${{env.BUILD_DIR}}/test/cpp-cmake-default_benchmark --v=2

      - name: Benchmark to file
        run: |
          ${{env.BUILD_DIR}}/test/cpp-cmake-default_benchmark \
            --benchmark_out=${{env.BUILD_DIR}}/test/benchmark.json \
            --benchmark_out_format=json \
            --v=2
      
      - name: Upload benchmark results
        uses: actions/upload-artifact@v4
        with:
          name: Benchmark results
          path: ${{env.BUILD_DIR}}/test/benchmark.json